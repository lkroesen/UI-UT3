init module {
	knowledge{
		% We are at a certain location if the IDs match, or ...
		at(UnrealID) :- navigation(reached, UnrealID).
		% if the coordinates are approximately equal.
		at(location(X, Y, Z)) :- navigation(reached, location(X1, Y1, Z1)), 
			round(X) =:= round(X1), round(Y) =:= round(Y1), round(Z) =:= round(Z1).
	}
	beliefs
	{
		% Initially, we are going nowhere.
		navigation(none, none).
	}
	program{
		% Save our initial location as our starting point.
		if bel( percept(orientation(Location, _, _)) ) then insert( target(Location) ).
		% Take a random navpoint as our target; note that it might not be reachable though.
		if bel( percept(navPoint(UnrealID, _, _))) then insert( target(UnrealID) ).
		
		% Initial believe
		if bel(percept(self(UID, Name, Team))) then insert(self(UID, Name, Team)).
		
		forall bel(percept ( navPoint(UID, Position, Neighbours))) do insert(navPoint(UID, Position, Neighbours)).
		forall bel(percept( pickup(UID, Label, ItemType))) do insert(pickup(UID, Label, ItemType)).
		
		%Visit every place once, after that we know everything this map has to offer.
		forall bel(navPoint(Name,_,_)) do adopt(go(Name)).
	}
	actionspec{
		% Make a best effort attempt to navigate to a certain location on the map.
		navigate(Destination) {
			pre{ not(navigation(navigating, _)) }
			post{ true }
		}
		stop{
			pre{true}
			post{true}
		}
	}
}

main module {
	program{
		%Kill priority
		%if goal( killAt(Place)) then navigate(Place)
		%Epic Priority
		if goal( epic(Place)) then navigate(Place).
		%High priority
		if goal( go(Item)) then navigate(Item).
		% Med priority
		if goal( be(At)) then navigate(At).
		%Low priority
		if goal( at(Destination) ) then navigate(Destination).
	}
}

event module {
	program {	
		% Update the navigation state of the bot ('send on change' percept).
		forall bel( navigation(OldStatus, OldDest),  percept(navigation(Status, Destination)) )
			do delete( navigation(OldStatus, OldDest) ) + insert( navigation(Status, Destination) ).

		% If the current goal has been reached, pick a new goal.			
		%if not( goal( at(_) ) ), bel( target(Destination), not(visited(Destination)) ) then adopt( at(Destination) ) + insert(visited(Destination)).
		
		%If while navigating we come across an item, we want it!
		%if bel(navigation(navigating, Item)), goal(at(Place)) then drop(at(Place)) + adopt(go(Item)).
		
		
		% If on a node close there's something of interest pick it up.
		forall bel( at(UID), navPoint(UID,_,List), pickup(U,armor,_), member(U,List) ) do adopt(be(U)).
		forall bel( at(UID), navPoint(UID,_,List), pickup(U,health,_), member(U,List) ) do adopt(be(U)).
		forall bel( at(UID), navPoint(UID,_,List), pickup(U,weapon,_), member(U,List) ) do adopt(at(U)).	
		
		
		if bel(percept(pickup(UID,armor,_)), percept(item(UID,_,_))) then adopt(epic(UID)) + stop.
		
		
		% If you're low on health go pick up some'
		if bel(percept(status(Health,_,_,_)), Health < 70) then insert(find(health)).
		
		% Armor handling, if we're low on something, we want to find it.
		% As long as we know there's a navpoint with the item...
		%if bel(percept(armor(V,_,_,_)), V < 19, navPoint(UID,_,_),   pickup(UID,_,armor_helmet), item(UID,_,_) ) then adopt(go(UID)).
		%if bel(percept(armor(_,V,_,_)), V < 49, navPoint(UID,_,_),   pickup(UID,_,armor_vest), item(UID,_,_) ) then adopt(go(UID)).
		%if bel(percept(armor(_,_,V,_)), V < 29, navPoint(UID,_,_),   pickup(UID,_,armor_thighpads), item(UID,_,_) ) then adopt(be(UID)).
		%if bel(percept(armor(_,_,_,V)), V < 99, navPoint(UID,_,_),   pickup(UID,_,armor_shield_belt), item(UID,_,_) ) then adopt(kill(UID)).
		
		
		% If you see the shieldbelt, IMMIDIATELLY GRAB IT
		%if bel( item(UID,armor,shield_belt))
		
		% Find handling
		if bel( find(health), at(UID), navPoint(UID,_,List), pickup(U,health,_), member(U,List), item(U,_,_) ) then adopt(epic(U)) + delete(be(U),go(U),at(U)).
		if bel( find(armour), at(UID), navPoint(UID,_,List), pickup(U,health,_), member(U,List), item(U,_,_) ) then adopt(epic(U)) + delete(be(U),go(U),at(U)).
		
		
		
		
		% If we do not have a shock rifle, we have to go grab one quickly.
		%if bel(percept(not(currentWeapon(shock_rifle,_)))) then insert(find(shock_rifle)).
		%if bel( at(UID), navPoint(UID,_,List), pickup(U,weapon,Weapon), member(U,List), find(Weapon) ) then adopt(epic(U)).
		% If we have a shock_rifle then don't try to find one.
		%forall bel(percept(currentWeapon(shock_rifle,_))) do delete(find(shock_rifle)).
		
		% Avoid Other bots if they have a better weapon
		
		% Believe to attack a bot if we see it
		if bel(percept(bot(UID,_,_,Position,_,_))) then insert(kill(UID)).
		
		% If a bot gets fragged remove the intent to kill it
		if bel(percept(fragged(_,_,UID,_))) then delete(kill(UID)).
		
		
		%if bel(pickup(UID,armor,_)) then adopt(at(UID)).



		
		%% 7.1 percepts %%
		
		% Current Orientation
		%if bel ( percept( not( orientation(Location,Rotation,Velocity ) ) ) ) then delete( orientation(Location,Rotation,Velocity) ).
		%if bel ( percept( orientation(Location,Rotation,Velocity) ) ) then insert( orientation(Location,Rotation,Velocity) ).
		
		% Current Status
		if bel ( percept( not( status(Health, Armour, Adrenaline, Combo ) ) ) ) then delete( status( Health, Armour, Adrenaline, Combo ) ).
		if bel ( percept( status( Health, Armour, Adrenaline, Combo ) ) ) then insert( status( Health, Armour, Adrenaline, Combo ) ).
		
		% Current Score
		if bel ( percept( not( score(Kills, Deaths, Score) ) ) ) then delete( score(Kills, Deaths, Score)).
		if bel ( percept( score(Kills, Deaths, Score))) then insert( score(Kills, Deaths, Score)).
		
		% Current Weapon Percept
		if bel ( percept( not( currentWeapon(WeaponType, FireMode) ) ) ) then delete(currentWeapon(WeaponType, FireMode)).
		if bel ( percept( currentWeapon(WeaponType, FireMode))) then insert(currentWeapon(WeaponType, FireMode)).
		
		% Inventory Weapon Percept
		if bel ( percept( not( weapon(WeaponType, Ammo, AltAmmo)))) then delete(weapon(WeaponType, Ammo, AltAmmo)).
		if bel ( percept( weapon(WeaponType, Ammo, AltAmmo))) then insert(weapon(WeaponType, Ammo, AltAmmo)).
		
		% Powerup percept UT3
		if bel ( percept( not( powerup(Type, Duration)))) then delete(powerup(Type, Duration)).
		if bel ( percept( powerup(Type, Duration))) then insert(powerup(Type, Duration)).
		
		% Armor Percept in UT3
		%if bel ( percept( not( armor(Helmet, Vest, Tighpad, ShieldBelt)))) then delete(armor(Helmet,Vest,Tighpad,ShieldBelt)).
		%if bel ( percept( armor(Helmet, Vest, Tighpad, ShieldBelt))) then insert(armor(Helmet, Vest, Tighpad, ShieldBelt)).
		
		%% 7.2 percepts %%
		
		% Frag Percept
		if bel ( percept( fragged(Time, Killer, Victim, WeaponType))) then insert(fragged(Time,Killer,Victim,WeaponType)).
		
		% Navigational Stae
		if bel ( percept( not(navigation(State,Destination)))) then delete(navigation(State,Destination)).
		if bel ( percept( navigation(State, Destination))) then insert(navigation(State, Destination)).
		
		% Path Percept
		if bel ( percept( not(path(Start, End, Length, Location)))) then delete(path(Start,End,Length,Location)).
		if bel ( percept( path(Start,End,Length, Location))) then insert(path(Start,End,Length,Location)).
		
		% 7.4 See percepts
		if bel ( percept( not(item(UID, Label, Pos)))) then delete(item(UID, Label, Pos)).
		if bel ( percept(item(UID, Label, Pos))) then insert(item(UID, Label, Pos)).
		
		% See other bot
		if bel ( percept( not(bot(UID, Name, Team, Pos, Weap, FireMode)))) then delete(bot(UID, Name, Team, Pos, Weap, FireMode)).
		if bel ( percept( bot(UID, Name, Team, Pos, Weap, FireMode))) then insert(bot(UID, Name, Team, Pos, Weap, FireMode)).
		
		% See pickup percept
		if bel ( percept( not(pickup(UID)))) then delete(pickup(UID)).
		if bel ( percept( pickup(UID))) then insert(pickup(UID)).
		
		% See slow volume
		if bel ( percept( not(slowVolume(UID)))) then delete(slowVolume(UID)).
		if bel ( percept( slowVolume(UID))) then insert(slowVolume(UID)).
		
		% Navpoint percept
		%if bel(percept( navPoint(UID, Position, Neighbours))) then insert(navPoint(UID, Position, Neighbours)).
		
		% Item Pickup percept
		%if bel(percept( pickup(UID, Label, ItemType))) then insert(pickup(UID, Label, ItemType)).
	}
}
